# This container can provide an environment for building and running Swift applications.
# latest info on swift releases for linux are here: https://swift.org/download/#releases

FROM openshift/base-centos7

MAINTAINER Jason Dudash <jason.dudash@gmail.com>

EXPOSE 8080

ENV SWIFT_MAJOR_VERSION=3 \
    SWIFT_MINOR_VERSION=0 \
    SWIFT_PATCH_VERSION=2

ENV SWIFT_VERSION=${SWIFT_MAJOR_VERSION}.${SWIFT_MINOR_VERSION} \
    PATH=$PATH:/swift/usr/bin

LABEL io.k8s.description="Platform for building and running Swift applications" \
      io.k8s.display-name="Swift ${SWIFT_VERSION}" \
      io.openshift.expose-services="8080:http" \
      io.openshift.tags="builder,swift,swift${SWIFT_MAJOR_VERSION}${SWIFT_MINOR_VERSION}" \
      io.openshift.s2i.scripts-url="image:///${STI_SCRIPTS_PATH}" \
      name="swift-${SWIFT_MAJOR_VERSION}${SWIFT_MINOR_VERSION}-centos7"

# Install toolchain needed for builds
RUN yum install -y centos-release-scl && \
    INSTALL_PKGS="clang libicu-devel git" && \
    yum install -y --setopt=tsflags=nodocs --enablerepo=centosplus $INSTALL_PKGS && \
    rpm -V $INSTALL_PKGS && \
    yum clean all -y

# Install actual SWIFT version 3.0.x
# Note: 3.1 will use a different S2I so only PATCH_VERSIONS differences will update *this* image
# TODO: MAKE THIS ALL A SINGLE RUN SO rm WILL REDUCED THE IMAGE SIZE
RUN DOWNLOAD_URL=https://swift.org/builds/swift-3.0.2-release/ubuntu1404/swift-3.0.2-RELEASE/swift-3.0.2-RELEASE-ubuntu14.04.tar.gz && \
    curl -fSsL $DOWNLOAD_URL -o swift-${SWIFT_VERSION}.tar.gz && \
    curl -fSsL $DOWNLOAD_URL.sig -o swift-${SWIFT_VERSION}.tar.gz.sig

# GET SECURITY KEYS FOR VALIDATING THE INSTALL
#RUN wget -q -O - https://swift.org/keys/all-keys.asc | gpg --import -
# VERIFY THE DOWNLOAD AND EXTRACT 
#RUN gpg --keyserver hkp://pool.sks-keyservers.net --refresh-keys Swift && \
#    gpg --batch --verify swift-${SWIFT_VERSION}.tar.gz.sig

# EXTRACT ARCHIVE
RUN mkdir -p /swift && \
    tar -zxf swift-${SWIFT_VERSION}.tar.gz --strip-components=1 -C /swift && \
    ln -s /swift/usr/bin/swift /usr/local/bin/swift && \
    ln -s /swift/usr/bin/swiftc /usr/local/bin/swiftc

RUN ln -s /lib64/libedit.so.0 /lib64/libedit.so.2 && \
    ln -s /usr/lib64/libicuuc.so /usr/lib64/libicuuc.so.52 && \
    ln -s /usr/lib64/libicui18n.so /usr/lib64/libicui18n.so.52

# Copy the S2I scripts from the specific language image to $STI_SCRIPTS_PATH
COPY ./s2i/bin $STI_SCRIPTS_PATH

RUN chown -R 1001:0 /opt/app-root && chmod -R ug+rwx /opt/app-root
USER 1001

CMD $STI_SCRIPTS_PATH/usage
